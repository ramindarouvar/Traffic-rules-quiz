{"version":3,"sources":["actions/questions.js","components/navs/MainNav.jsx","components/common/Header.jsx","components/common/Footer.jsx","components/sidebars/FirstSidebar.jsx","components/sidebars/SecondSidebar.jsx","components/layouts/MainLayout.jsx","components/aboutUs/AboutUs.jsx","components/contact/contact.jsx","actions/question.js","actions/userAnswers.js","components/quiz/Question.jsx","components/quiz/QuizNav.jsx","actions/quizEnded.js","components/time/CountDownTimer.jsx","utils/calculateRemainingTime.js","components/quiz/Questions.jsx","components/quiz/QuizEnd.jsx","components/showingAnswers/AnswersAndOptions.jsx","components/result/Result.jsx","utils/calculateMistakes.js","components/quiz/QuizStart.jsx","actions/user.js","components/pageNoyFound/PageNotFound.jsx","components/containers/TrafficQuiz.jsx","components/containers/App.js","reducers/index .js","reducers/questions.js","reducers/qestion.js","reducers/user.js","reducers/userAnswers.js","reducers/quizEnded.js","store/index.js","index.js"],"names":["questions","MainNav","className","style","marginBottom","direction","id","NavLink","to","activeClassName","exact","type","placeholder","onFocus","e","target","setAttribute","onBlur","Header","src","alt","width","Footer","marginTop","href","rel","FirstSidebar","background","color","fontSize","SecondSidebar","onSubmit","preventDefault","alert","firstElementChild","children","value","MainLayout","props","useState","btnDisplay","setBtnDisplay","useEffect","document","body","addEventListener","scrollTop","documentElement","onClick","title","AboutUs","Helmet","backgroundColor","Contact","reset","required","clearQuestion","dispatch","a","question","payload","addAnswer","userAnswers","questionId","userAnswerOption","singleAnswer","userAnswer","push","clearAnswers","Question","useDispatch","useSelector","state","answer","setAnswer","getSingleQuestion","length","updateAnswer","handleAnswering","event","isEmpty","imageUrl","minHeight","text","Object","keys","options","map","optionId","htmlFor","name","Number","onChange","border","optionImageUrl","QuizNav","onQuestionChange","min","max","difference","finishQuiz","newQuiz","CountDownTimer","replyingDeadline","quizEnded","remainingTime","setRemainingTime","Date","now","startTime","endTime","setTimeout","minutes","Math","floor","seconds","remainingTimeString","calculateRemainingTime","Redirect","Questions","history","setQuestionId","currentUser","QuizEnd","loading","setLoading","i","height","AnswersAndOptions","Link","rightAnswer","Result","allMistakes","unAnswered","calculateMistakes","passed","trueAnswers","trueAnswersPercentage","toFixed","mistakesPercentage","unAnsweredPercentage","cursor","firstname","lastname","QuizStart","forceUpdate","firstName","setFirstName","lastName","setLastName","nationalId","setNationalId","birthDay","setBirthDay","birthMonth","setBirthMonth","birthYear","setBirthYear","birthDate","setBirthDate","birthDateFilled","setBirthDateFilled","acceptRules","setAcceptRules","validator","useRef","SimpleReactValidator","messages","accepted","numeric","element","message","right","includes","handleUserFormSubmit","current","allValid","dateOfBirth","user","setUser","showMessages","maxLength","isNaN","onKeyDown","code","keyCode","submitButton","getElementById","requestSubmit","handlePressEnterKey","defaultValue","disabled","hidden","currentTarget","checked","PageNotFound","withRouter","Switch","Route","path","component","render","App","BrowserRouter","reducers","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","allQuestions"],"mappings":"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","file":"static/js/main.d363dda8.chunk.js","sourcesContent":["export const getAllQuestions = questions => {\r\n    return async dispatch => {\r\n        const allQuestions = questions;\r\n        await dispatch({type: \"INIT\", payload: allQuestions});\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MainNav = () => {\r\n    return ( \r\n        <div className=\"nav-menu py-md-0\" style={{marginBottom: \"20px\"}}>\r\n            <div className=\"row\">\r\n                <nav className=\"col-12 col-md-11 mx-auto row navbar py-0 navbar-expand-md pb-2 pb-md-0\" style={{direction: 'rtl'}}>\r\n                    <div className=\"collapse navbar-collapse pb-3 pb-md-0 row\" id=\"main-navbar\">\r\n                        <div className=\"col-12 col-md-12 col-lg-8 col-xl-9 text-right text-md-center text-lg-right p-0 nav-menu\" >\r\n                            <ul className=\"list-unstyled w-100 list-inline m-0 p-0 d-inline-block navbar-nav\">\r\n                                <li className=\"d-block d-md-inline text-center m-0\">\r\n                                    <NavLink\r\n                                    className=\"nav-link d-block d-md-inline-block p-1 px-3\"\r\n                                    to=\"/\"\r\n                                    activeClassName=\"font-weight-bold border-bottom border-top\"\r\n                                    exact\r\n                                    >خانه</NavLink>\r\n                                </li>\r\n                                <li className=\"d-block d-md-inline text-center m-0 nav-item\">\r\n                                    <NavLink\r\n                                    className=\"nav-link d-block d-md-inline-block p-1 px-3\"\r\n                                    activeClassName=\"font-weight-bold border-bottom border-top\"\r\n                                    exact\r\n                                    to=\"/about-us\">درباره ما</NavLink>\r\n                                </li>\r\n                                <li className=\"d-block d-md-inline text-center m-0 nav-item dropdown\">\r\n                                    <NavLink\r\n                                        className=\"nav-link d-block d-md-inline-block p-1 px-3 dropdown-toggle\"\r\n                                        activeClassName=\"font-weight-bold border-bottom border-top\"\r\n                                        exact\r\n                                        to=\"/contact\">\r\n                                            تماس با ما\r\n                                    </NavLink>\r\n\r\n                                    <ul className=\"dropdown-menu dropdown-menu-left dropdown-menu-lg-right\">\r\n                                        <li  className=\"dropdown-item text-right py-3\">تلفن: \r\n                                        3729182-31-98+\r\n                                        </li>\r\n                                        <div className=\"dropdown-divider m-0\"></div>\r\n                                        <li  className=\"dropdown-item text-right py-3\">ایمیل: r.darouvar@protonmail.com</li>\r\n                                        <div className=\"dropdown-divider m-0\"></div>\r\n                                        <li  className=\"dropdown-item text-right py-3\">آدرس: ایران - شهر ... - خیابان ... - کوچه ... - پلاک 83 - طبقه همکف</li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 d-none d-md-block d-lg-none my-2\"></div>\r\n\r\n                        <div className=\"col-12 col-md-9 col-lg-4 col-xl-3 mx-md-auto text-right text-md-center text-lg-right p-md-0 pb-md-3 pb-lg-0\">\r\n                            <form className=\"form-inline h-100\">\r\n                                <div className=\"search-box input-group mx-0 mx-md-auto mx-lg-0\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <button type=\"submit\" className=\"btn btn-info search-button \" >\r\n                                            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                    <input type=\"text\" className=\"search-text form-control\" \r\n                                        placeholder=\"جستجو (نمادین)\" \r\n                                        onFocus={e => {\r\n                                            e.target.setAttribute(\"placeholder\", \"\");\r\n                                        }}\r\n                                        onBlur={e => {\r\n                                            e.target.setAttribute(\"placeholder\", \"جستجو (نمادین)\");\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#main-navbar\">\r\n                        <span className = \"navbar-toggler-icon text-white\">\r\n                            <i className =\"fa fa-bars fa-2x\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                    </button>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default MainNav;","import React from 'react';\r\nimport { Fragment } from 'react';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <Fragment>\r\n            <header>\r\n                <div className=\"row web-header\">\r\n                    <div className=\"col-sm-2 text-right\">\r\n                        <img src=\"images/lights.png\" className=\"img-fluid d-none d-sm-inline\" alt=\"traffic-lights\" style={{width: \"50%\"}}/>\r\n                    </div>\r\n                    <div className=\"col-sm p-4 p-sm-0 align-self-center\">\r\n                        <p className=\"header-title text-center m-0\">\r\n                            آزمون آیین نامه راهنمایی و رانندگی\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"col-sm-2 text-left\">\r\n                        <img src=\"images/warning.png\" className=\"img-fluid d-none d-sm-inline\" alt=\"warning-sign\" style={{width: \"67%\"}}/>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <footer style={{marginTop: \"20px\"}}>\r\n            <div className=\"footer-navs\">\r\n                <div className=\"container-md text-center\">\r\n                    <div className=\"social-media py-4\">\r\n                        <a href=\"https://www.instagram.com/\" target=\"_blank\" rel=\"noreferrer\" className=\"mx-4\">\r\n                            <i className=\"fa fa-instagram fa-2x\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                        <a href=\"https://telegram.org\" target=\"_blank\" rel=\"noreferrer\" className=\"mx-4\">\r\n                            <i className=\"fa fa-telegram fa-2x\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                        <a href=\"https://twitter.com/\" target=\"_blank\" rel=\"noreferrer\" className=\"mx-4\">\r\n                            <i className=\"fa fa-twitter fa-2x\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"footer-copyright pb-5\">\r\n                    © کلیه حقوق این سامانه متعلق به رامین داروور  می‌باشد.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n     );\r\n}\r\n \r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\n\r\nconst FirstSidebar = () => {\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"card\" style={{background: \"#2F719B\", color: \"white\"}}>\r\n                <img className=\"card-img-top\" src=\"./images/driving-test.jpg\" alt=\"traffic-rules-exam\" />\r\n                <div className=\"card-body\">\r\n                    <h3>درباره ما</h3>\r\n                    <p className=\"card-text text-justify\" style={{fontSize: \"18px\"}}>\r\n                        هدف از ساخت این وبسایت، شبیه سازی آزمون آیین نامه راهنمایی و رانندگی است. \r\n                        {\" \"}\r\n                        <br className=\"d-none d-lg-block\"/>\r\n                        این آزمون به لحاظ محاسبه نمره و زمان پاسخ گویی مطابق با آزمون اصلی می باشد.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default FirstSidebar;","import React from 'react';\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\n\r\nconst SecondSidebar = () => {\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"card mb-4 sidebar\">\r\n                <div className=\"card-header sidebar-header\">آخرین خبر ها</div>\r\n                    <ul className=\"list-group list-group-flush px-0\">\r\n                        <li className=\"list-group-item py-1 px-2 sidebar-li\">\r\n                            <a className=\"sidebar-link\" href=\"https://www.isna.ir/news/1400093023473/\" target=\"_blank\" rel=\"noreferrer\">- تنها 5نفر از سرنشینان اتوبوس مشهد بستری شدند</a>\r\n                        </li>\r\n                        <li className=\"list-group-item py-1 px-2 sidebar-li\">\r\n                            <a className=\"sidebar-link\" href=\"https://www.isna.ir/news/1400093023307/\" target=\"_blank\" rel=\"noreferrer\">- توصیه‌های پلیس برای رانندگی در بارندگی</a>\r\n                        </li>\r\n                        <li className=\"list-group-item py-1 px-2 sidebar-li\">\r\n                            <a className=\"sidebar-link\" href=\"https://www.isna.ir/news/1400093023298/\" target=\"_blank\" rel=\"noreferrer\">- بی‌مسئولیتی شرکت‌های به‌کارگیرنده موتورسیکلت سواران نسبت به تخلفات آنان</a>\r\n                        </li>\r\n                        <li className=\"list-group-item py-1 px-2 sidebar-li\">\r\n                            <a className=\"sidebar-link\" href=\"https://www.isna.ir/news/1400092922410/\" target=\"_blank\" rel=\"noreferrer\">- ترافیک پرحجم محورهای غربی منتهی به تهران/ بارش باران در جاده های ۳ استان</a>\r\n                        </li>\r\n                        <li className=\"list-group-item py-1 px-2 sidebar-li\">\r\n                            <a className=\"sidebar-link\" href=\"https://www.isna.ir/news/1400092922401/\" target=\"_blank\" rel=\"noreferrer\">- ۵۰ میلیارد تومان برای اجرای طرح راهداری زمستانی هزینه می‌شود</a>\r\n                        </li>\r\n                    </ul>\r\n            </div>   \r\n            <div className=\"card sidebar\">\r\n                <div className=\"card-header sidebar-header\">عضویت در خبرنامه</div>\r\n                <div className=\"card-body px-3\">\r\n                    <p className=\"card-text text-justify mr-1\" style={{fontSize: \"18px\"}}>\r\n                        برای دریافت آخرین خبر ها در خبرنامه ما عضو شوید.\r\n                    </p>\r\n                    <form className=\"form-group\" onSubmit={e => {\r\n                        e.preventDefault()\r\n                        alert(\"شما با موفقیت در خبرنامه عضو شدید.\")\r\n                        e.target.firstElementChild.children[1].value = \"\";\r\n                        }\r\n                    }>\r\n                        <div className=\"row input-group mx-auto\">\r\n                            <button className=\"col-2 form-control btn btn-info input-group-prepend\" type=\"submit\">\r\n                                <i className=\"fa fa-paper-plane w-100 h-100 p-1\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                            <input type=\"email\" id=\"newsSubscription\" className=\"col-10 w-100 form-control input-group-append\" placeholder=\"ایمیل خود را وارد کنید\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default SecondSidebar;","import React, { useEffect, useState } from 'react';\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\nimport MainNav from './../navs/MainNav';\r\nimport Header from './../common/Header';\r\nimport Footer from './../common/Footer';\r\nimport FirstSidebar from './../sidebars/FirstSidebar';\r\nimport SecondSidebar from '../sidebars/SecondSidebar';\r\n\r\nconst MainLayout = props => {\r\n    const [btnDisplay, setBtnDisplay] = useState(false)\r\n\r\n    useEffect(() => {\r\n       document.body.addEventListener(\"scroll\", () => {\r\n        if (document.body.scrollTop > 50|| document.documentElement.scrollTop > 50) {\r\n            // display \"back to top\" button during scroll down\r\n            setBtnDisplay(true);\r\n          } else {\r\n            // hide \"back to top\" button during going to top of the page\r\n            setBtnDisplay(false);\r\n          }\r\n       }) \r\n    },[])\r\n    // function for going to top of the page\r\n    const backToTop = () => {\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n    }\r\n    return ( \r\n        <Fragment>\r\n            <Header />\r\n            <MainNav />\r\n            <main>\r\n                <div className=\"row mx-lg-2 mx-xl-5 justify-content-around\">\r\n                    <div className=\"d-none d-xl-block col-xl-2 mb-4\">\r\n                        <FirstSidebar />\r\n                    </div>\r\n\r\n                    <div className=\"col-11 col-lg-8 col-xl-7 order-md-0 mx-auto mb-3 px-0\">{props.children}</div>\r\n\r\n                    <div className=\"col-11 col-lg-4 col-xl-3 mb-4 px-0 px-lg-2 pl-xl-4 pr-xl-3\">\r\n                        <div className=\"d-block d-xl-none mb-4\">\r\n                            <FirstSidebar />\r\n                        </div>\r\n                        <SecondSidebar />\r\n                    </div>\r\n                \r\n                </div>\r\n            </main>\r\n            <button id=\"backToTop\" className={btnDisplay ? \"d-block btn btn-info p-3\" : \"d-none\" } onClick={() => backToTop()} title=\"رفتن به بالای صفحه\">\r\n                <i className=\"fa fa-hand-pointer-o fa-2x\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            <Footer />\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default MainLayout;","import React, { Fragment, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst AboutUs = () => {\r\n    useEffect(() => {\r\n        // go to top of the page\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n    },[])\r\n\r\n    return ( \r\n        <Fragment>\r\n            <Helmet>\r\n                <title>درباره ما</title>\r\n            </Helmet>\r\n            <div className=\"border rounded w-100 p-5\" style={{backgroundColor: \"#F7FAFD\"}}>\r\n                <h1>درباره ما</h1>\r\n                <div className=\"px-2 py-2 mt-3 text-justify\">\r\n                    <blockquote className=\"blockquote\">\r\n                        <p className=\"mb-3\" style={{fontSize: \"23px\"}}>\r\n                            این وبسایت با استفاده از زبان جاوااسکریپت و امکانات کتابخانه \r\n                            React\r\n                            برنامه نویسی شده است.\r\n                            در این برنامه برای مدیریت \r\n                            State \r\n                            از کتابخانه \r\n                            Redux \r\n                            استفاده کردم. \r\n                            استایل این وبسایت\r\n                            Responsive\r\n                            است.\r\n                            <br />\r\n                            هدف از ساخت این وبسایت، \r\n                            <b> \"شبیه سازی آزمون آیین نامه راهنمایی و رانندگی\" </b>\r\n                            است.\r\n                            این آزمون به لحاظ محاسبه نمره و زمان پاسخ گویی مطابق با آزمون اصلی می باشد.\r\n                        </p>\r\n                        <footer className=\"blockquote-footer\" style={{fontSize: \"20px\"}}>رامین داروور</footer>\r\n                    </blockquote>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default AboutUs;","import React, { Fragment, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Contact = () => {\r\n    useEffect(() => {\r\n        // go to top of the page\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n    },[])\r\n    return ( \r\n        <Fragment>\r\n            <Helmet>\r\n                <title>تماس با ما</title>\r\n            </Helmet>\r\n            <div className=\"border rounded w-100 p-5\" style={{backgroundColor: \"#F7FAFD\"}}>\r\n                <h1>تماس با ما</h1>\r\n                <ul className=\"contact-info mt-4\">\r\n                    <li  className=\"text-right py-2\">آدرس: ایران - شهر ... - خیابان ... - کوچه ... - پلاک 83 - طبقه همکف</li>\r\n                    <li  className=\"text-right py-2\">تلفن: \r\n                        3729182-31-98+\r\n                    </li>\r\n                    <li  className=\"text-right py-2\">ایمیل: r.darouvar@protonmail.com</li>\r\n                </ul>\r\n                <div>\r\n                    \r\n                    <form className = \"contact-form form-group border row justify-content-center pb-2 rounded\" \r\n                          onSubmit={e => {\r\n                                    e.preventDefault()\r\n                                    e.target.reset();\r\n                                }\r\n                          }\r\n                    >\r\n                        <h2 className = \"text-center col-12 font-weight-bold py-2 bg-info text-white rounded-top\">فرستادن پیام</h2>\r\n                        <input className = \"col-11 col-md-10 mb-2 form-control\" type=\"text\" placeholder=\"نام و نام خانوادگی\" required/>\r\n                        <input className = \"col-11 col-md-10 mb-2 form-control\" type=\"email\" placeholder=\"ایمیل\" required/>\r\n                        <textarea className = \"col-11 col-md-10 mb-2 form-control contact-mesage\" placeholder=\"پیامتان را اینجا بنویسید ...\" required/>\r\n                        <button className=\"col-5 col-sm-3 btn btn-primary\" style={{fontSize: \"25px\"}}>بفرست</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment> \r\n        );\r\n}\r\n \r\nexport default Contact;","import questions from \"./../questionsJson/questions.json\"\r\n\r\nexport const getSingleQuestion = questionId => {\r\n    return async dispatch => {\r\n        const question = await(questions[questionId]);\r\n        await dispatch({ type: \"GET_QUESTION\", payload: question });\r\n    };\r\n};\r\n// clear last question saved in store\r\nexport const clearQuestion = () => {\r\n    return async dispatch => {\r\n        const question = {};\r\n        await dispatch({ type: \"CLEAR_QUESTION\", payload: question });\r\n    };\r\n};","export const addAnswer = (userAnswers, questionId, userAnswerOption) => {\r\n    return async dispatch => {\r\n            const singleAnswer = {\r\n                questionId: questionId,\r\n                userAnswer: userAnswerOption\r\n            }\r\n            userAnswers.push(singleAnswer);\r\n            await dispatch({type: \"ADD_ANSWER\", payload: userAnswers})\r\n    }\r\n}\r\nexport const updateAnswer = (userAnswers, questionId, userAnswerOption) => {\r\n    return async dispatch => {\r\n            userAnswers[questionId-1].userAnswer = userAnswerOption;\r\n            await dispatch({type: \"UPDATE_ANSWER\", payload: userAnswers})\r\n    }\r\n}\r\nexport const clearAnswers = () => {\r\n    const userAnswers = [];\r\n    return async dispatch => {\r\n        await dispatch({type: \"CLEAR_ANSWERS\", payload: userAnswers})\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSingleQuestion } from './../../actions/question';\r\nimport { addAnswer, updateAnswer } from './../../actions/userAnswers';\r\nimport { isEmpty } from 'lodash';\r\n\r\nconst Question = ({questionId}) => {\r\n    const dispatch = useDispatch()\r\n    // get current question from store after dispatching in useEffect\r\n    const question = useSelector(state => state.question)\r\n    const [answer, setAnswer] = useState(0)\r\n    // get user answers array from store\r\n    const userAnswers = useSelector(state => state.userAnswers);\r\n    \r\n    useEffect(() => {\r\n        // action for get specified current question\r\n        dispatch(getSingleQuestion(questionId));\r\n    },[])\r\n    useEffect(() => {\r\n        // /If this is the first time the user has answered this question\r\n            if( answer !== 0 && userAnswers.length < questionId){   \r\n                // add answer\r\n                dispatch(addAnswer(userAnswers, questionId, answer));\r\n            }\r\n        // To change the option previously entered as an answer to new option\r\n            if( answer !== 0 && \r\n                userAnswers.length >= questionId && \r\n                answer !== userAnswers[questionId-1].userAnswer){\r\n                // update answer\r\n                dispatch(updateAnswer(userAnswers, questionId, answer));\r\n            }\r\n    })\r\n    \r\n    const handleAnswering = event => {\r\n        // update answer state with entered option value\r\n        setAnswer(event.target.value);\r\n    }\r\n    // For the first rendering that has not yet received the content of the question from the store, return the null to avoid rendering errors\r\n    if(isEmpty(question)) {\r\n        return null;\r\n    }\r\n    // After receiving the question from the store \r\n    else {\r\n        if(question.imageUrl===\"\"){  \r\n            // If the question does not have an image.\r\n            return(\r\n                    <div id=\"question\" key={questionId} className=\"row h-100 py-3 px-3 px-sm-5 mt-2 mb-3\" style={{minHeight: \"300px\"}}>\r\n                        <div className=\"col-12 d-flex flex-column\">\r\n                            <h3 className=\"font-weight-bold pb-2 mb-4\">{`${question.id} : ${question.text}`}</h3>\r\n                            <div className=\"options mr-1 flex-fill row justify-content-around ml-2 pr-3\">\r\n                                { // loading and showing each answer option content\r\n                                    Object.keys(question.options).map(optionId => {\r\n                                        return(\r\n                                            <label key={`${questionId}${optionId}`} className=\"option col-12 col-sm-6 my-2\" htmlFor={`option-${optionId}`}>\r\n                                                <div className=\"position-relative d-inline-block\">\r\n                                                    <input type=\"radio\" id={`option-${optionId}`} name=\"options\" className=\"d-none\" \r\n                                                            value={Number(optionId)}\r\n                                                            onChange = {e => handleAnswering(e)}\r\n                                                            style={{border: '3px solid black'}}\r\n                                                    />\r\n                                                        <span className={userAnswers.length >= questionId \r\n                                                                            // If the question has already been answered, make the color inside the circle blue\r\n                                                                                ? \r\n                                                                            (userAnswers[questionId-1].userAnswer === optionId ? \r\n                                                                                \"checkmark option-hover selected-option bg-primary\"\r\n                                                                                : \"checkmark option-hover\"\r\n                                                                            )\r\n                                                                            : \"checkmark option-hover\"\r\n                                                                        }\r\n                                                        >\r\n                                                        </span>\r\n                                                </div>\r\n                                                <span className=\"option-hover\">\r\n                                                    {optionId})&nbsp; \r\n                                                    {question.options[optionId].text}\r\n                                                    {question.options[optionId].optionImageUrl === \"\" \r\n                                                        ? \r\n                                                            null \r\n                                                                : \r\n                                                            // Show image in reply option if available \r\n                                                            <img className=\"img-thumbnail\" src={question.options[optionId].optionImageUrl} alt=\"answer-option\" />\r\n                                                    }\r\n                                                </span>\r\n                                            </label>    \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            )   \r\n        }\r\n        else {\r\n            // If the question has an image.\r\n            return ( \r\n                <div id=\"question\" key={questionId} className=\"row h-100 py-3 px-3 px-sm-5 mt-2 mb-3\" style={{minHeight: \"300px\"}}>\r\n                    <div className=\"col-sm-8 d-flex flex-column\">\r\n                        <h3 className=\"font-weight-bold pb-2 mb-4\">{`${question.id} : ${question.text}`}</h3>\r\n                        <div className=\"options mr-4 flex-fill d-flex flex-column justify-content-around ml-2 pr-3\">\r\n                            {// loading and showing each answer option content\r\n                                Object.keys(question.options).map(optionId => {\r\n                                    return(\r\n                                        <label key={`${questionId}${optionId}`} className=\"option mb-1\" htmlFor={`option-${optionId}`}>\r\n                                            <div className=\"position-relative d-inline-block\">\r\n                                                {/* Main radio button (not displayed) */}\r\n                                                <input type=\"radio\" id={`option-${optionId}`} name=\"options\" className=\"d-none\" \r\n                                                        value={Number(optionId)}\r\n                                                        onChange = {e => handleAnswering(e)}\r\n                                                        style={{border: '3px solid black'}}\r\n                                                />\r\n                                                {/* The custom button radio button element that is displayed */}\r\n                                                <span className={userAnswers.length >= questionId ?\r\n                                                                    // If the question has already been answered, make the color inside the circle blue\r\n                                                                    (userAnswers[questionId-1].userAnswer === optionId ? \r\n                                                                        \"checkmark option-hover selected-option bg-primary\"\r\n                                                                        : \"checkmark option-hover\"\r\n                                                                    )\r\n                                                                    : \"checkmark option-hover\"\r\n                                                                }\r\n                                                ></span>\r\n                                            </div>\r\n                                            <span className=\"option-hover\">\r\n                                                {optionId})&nbsp; \r\n                                                {question.options[optionId].text}\r\n                                                {question.options[optionId].optionImageUrl === \"\" \r\n                                                    ? \r\n                                                    null \r\n                                                        :\r\n                                                    // Show image in reply option if available \r\n                                                    <img className=\"img-thumbnail\" src={question.options[optionId].optionImageUrl} alt=\"answer-option\"/>\r\n                                                }\r\n                                            </span>\r\n                                        </label> \r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-4 text-center text-sm-right question-image mt-4 mx-auto mx-md-0 text-center\">\r\n                        {question.imageUrl === \"\" \r\n                            ? \r\n                            null \r\n                            : \r\n                            // Show the image in question\r\n                            <img src={question.imageUrl} className=\"rounded border\" alt=\"question\"/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Question;","import React from 'react';\r\n\r\nconst QuizNav = ({onQuestionChange, questionId}) => {\r\n    return ( \r\n        <div className=\"q-nav text-center\">\r\n            <div className=\"slidecontainer\">\r\n                <input type=\"range\" className=\"slider\"\r\n                       value={questionId} min=\"1\" max=\"30\" \r\n                       onChange={e => {\r\n                           const difference = e.target.value - questionId\r\n                           // render the question seleted from range input \r\n                           onQuestionChange(difference);\r\n                            }   \r\n                        }\r\n                />\r\n            </div>\r\n            <div className=\"btn-group row justify-content-around\" style={{width: \"30%\"}}>\r\n\r\n                {questionId===1 ? \r\n                    // Do not display the Go to \"Previous\" button when the user is on the first question.\r\n                    null\r\n                    :\r\n                    <button type=\"submit\" id=\"back-q\" className=\"q-nav-botton btn btn-primary col-6\"  \r\n                            onClick={() => {\r\n                                // Send -1 to the method to change the question method to go to the previous question\r\n                                onQuestionChange(-1)\r\n                            }}\r\n                    >   \r\n                        <span className=\"q-nav-text active pr-1\">قبلی</span>\r\n                        <i className=\"fa fa-arrow-right d-block\" aria-hidden=\"true\"></i>{\" \"}\r\n                    </button>\r\n                }\r\n                    <button type=\"submit\" id=\"next-q\" \r\n                        className={questionId === 30 ? \"q-nav-botton btn btn-success col-6\" : \"q-nav-botton btn btn-primary col-6\"}\r\n                        onClick={() => {\r\n                            // Send +1 to the method to change the question method to go to the next question  \r\n                            onQuestionChange(1);\r\n                        }}\r\n                    >\r\n                        <span className=\"q-nav-text pl-1\">{questionId === 30 ? \"نتیجه\" : \"بعدی\"}</span>{\" \"}\r\n                        <i className=\"fa fa-arrow-left d-block\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default QuizNav;\r\n","export const finishQuiz = () => {\r\n    return async dispatch => {\r\n        await dispatch({type: \"FINISH_QUIZ\", payload: true})\r\n    }\r\n}\r\nexport const newQuiz = () => {\r\n    return async dispatch => {\r\n        await dispatch({type: \"FINISH_QUIZ\", payload: false})\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { calculateRemainingTime } from './../../utils/calculateRemainingTime';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { finishQuiz } from './../../actions/quizEnded';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst CountDownTimer = ({replyingDeadline}) => {\r\n    const quizEnded = useSelector(state => state.quizEnded);\r\n    const dispatch = useDispatch();\r\n    // If the response time minutes are single digits, display them in double digits (with zero on the back)\r\n    if (replyingDeadline < 10) replyingDeadline = \"0\" + replyingDeadline;\r\n    const [remainingTime, setRemainingTime] = useState(`${replyingDeadline}:00`)\r\n    // Get the current time and put in the start time\r\n    const [startTime,] = useState(Date.now());\r\n    // Calculate the end point of the response time\r\n    const [endTime,] = useState(startTime + replyingDeadline * 60 * 1000);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            // updating remaining time every second\r\n            setRemainingTime(calculateRemainingTime(endTime));\r\n        }, 1000);\r\n        if(remainingTime === \"پایان زمان آزمون\"){\r\n            alert(\"زمان شما به پایان رسید\")\r\n            dispatch(finishQuiz())\r\n        }\r\n    })\r\n    // Redirect to the exam end page If the response time is over. \r\n    if(quizEnded) return <Redirect to = \"/quiz-end\" />\r\n    \r\n    return ( \r\n        <div className=\"text-center\">\r\n            <div id=\"countDownTimer\"\r\n                className={remainingTime === \"پایان زمان آزمون\" ? \r\n                \"countDownTimer bg-danger d-block d-md-inline-block px-2 text-white mx-auto\"\r\n                : \r\n                \"countDownTimer d-block d-md-inline-block px-2 text-white mx-auto\"}\r\n            >\r\n                {remainingTime}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default CountDownTimer;","export const calculateRemainingTime = (endTime) => {\r\n    var now = Date.now();\r\n    var remainingTime = endTime - now;\r\n    var minutes = Math.floor(remainingTime / (1000 * 60));\r\n    var seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n    if (seconds < 10) seconds = \"0\" + seconds;\r\n  \r\n    var remainingTimeString = `${minutes}:${seconds}`;\r\n    \r\n    if (remainingTime < 0) {\r\n      // If there is no time left to respond\r\n      remainingTimeString = 'پایان زمان آزمون'\r\n    }\r\n\r\n    return remainingTimeString;\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport Question from './Question';\r\nimport QuizNav from './QuizNav';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addAnswer } from './../../actions/userAnswers';\r\nimport CountDownTimer from './../time/CountDownTimer';\r\nimport { Redirect } from 'react-router';\r\nimport { finishQuiz } from './../../actions/quizEnded';\r\nimport { isEmpty } from 'lodash';\r\n\r\nconst Questions = ({history}) => {\r\n    const [questionId, setQuestionId] = useState(1);\r\n    const userAnswers = useSelector(state => state.userAnswers);\r\n    const currentUser = useSelector(state => state.currentUser);\r\n    const quizEnded = useSelector(state => state.quizEnded)\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        // go to top of the page\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n    },[])\r\n\r\n    const handleQuestionChange = (difference) => {\r\n        if(30 >= questionId+difference)\r\n            // Set the ID of the new question for rendering \r\n            setQuestionId(questionId+difference);\r\n\r\n        // If the user did not select an option for answering \r\n        if(userAnswers.length < questionId){\r\n            // Add zero as the answer \r\n            dispatch(addAnswer(userAnswers, questionId, 0));\r\n        }\r\n\r\n        if(30 < questionId+difference){\r\n            // set quizEnded true(in store)\r\n            dispatch(finishQuiz())\r\n        }\r\n    }\r\n    // This page will be rendered only if the user has filled in the start form, otherwise it will be redirected to the data entry page \r\n    if(isEmpty(currentUser)){\r\n        return(\r\n            <Redirect to=\"/\" />\r\n        )\r\n    }\r\n    if(quizEnded === true){\r\n        // At the end of the exam, go to the exam end page. \r\n        return(\r\n            <Redirect to=\"/quiz-end\" />\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"quiz-section border rounded w-100\">\r\n                <form className=\"question h-100\" id=\"questionForm\" onSubmit = {e => e.preventDefault()}>\r\n                    {/* countdown timer component for showing remaining time */}\r\n                    <CountDownTimer replyingDeadline={20} history={history}/>\r\n                    {/* navigation for change questions */}\r\n                    <QuizNav onQuestionChange={handleQuestionChange} questionId={questionId}/>\r\n                    {/* render each question */}\r\n                    <Question key={`q${questionId}`} questionId={questionId}/>\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Questions;","import React, { useState , useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addAnswer } from './../../actions/userAnswers';\r\nimport { clearQuestion } from '../../actions/question';\r\nimport { Redirect } from 'react-router';\r\nimport { finishQuiz } from './../../actions/quizEnded';\r\n\r\nconst QuizEnd = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    // get user questions from store\r\n    const questions = useSelector(state => state.questions);\r\n    // get user answers from store\r\n    const userAnswers = useSelector(state => state.userAnswers);\r\n    const quizEnded = useSelector(state => state.quizEnded);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        // go to top of the page\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n        // If the user has not answered all the questions\r\n        if(userAnswers.length < Object.keys(questions).length){\r\n            // Answer the unanswered questions to zero\r\n            for (var i = userAnswers.length; i < Object.keys(questions).length; i++) {\r\n                dispatch(addAnswer(userAnswers, i+1, 0));\r\n            }\r\n            dispatch(finishQuiz());\r\n            // setLoading(false);\r\n        }\r\n        dispatch(clearQuestion());\r\n        setTimeout(() => {\r\n            // After 1000 milliseconds, set the loading state to \"false\" to render the result component\r\n            setLoading(false);\r\n        }, 1000); \r\n    },[])\r\n\r\n    // If the exam is not over, redirect to the first page\r\n    if(!quizEnded) return <Redirect to = \"/\" />\r\n\r\n    return ( \r\n        <div className=\"quiz-section border rounded w-100\">\r\n            {loading ? \r\n                // show spinner for 1500 milliseconds\r\n                    <div className=\"text-center py-5\" style={{height: \"400px\"}}>\r\n                        <div className=\"mt-3\">\r\n                            <img src=\"./images/spinners/loadingResult.gif\" alt=\"preloader\" className=\"mx-auto\"/> \r\n                        </div>\r\n                        <span className=\"h2\" style={{color: \"#6D8CFA\"}}>محاسبه نمره ...</span>\r\n                    </div>\r\n                :\r\n                // then show result component\r\n                <Redirect to=\"/quiz-result\" />\r\n            }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default QuizEnd;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst AnswersAndOptions = () => {\r\n    const questions = useSelector(state => state.questions);\r\n    const userAnswers = useSelector(state => state.userAnswers);\r\n    const quizEnded = useSelector(state => state.quizEnded);\r\n\r\n    useEffect(() => {\r\n        // go to top of the page\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n    },[])\r\n\r\n    // If the exam is not over, redirect to the first page\r\n    if(!quizEnded) return <Redirect to = \"/\" />\r\n\r\n    return ( \r\n        <div className=\"quiz-section border rounded w-100\">\r\n            <h2 className=\"text-center text-white bg-dark py-3 mb-0\">برگه تصحیح شده</h2>\r\n            <div className=\"text-center sticky-top mb-5\">\r\n                <Link to=\"/quiz-result\" className=\"btn back-to-result text-white border-top-0\">بازگشت به صفحه کارنامه</Link>\r\n            </div>\r\n            {Object.keys(questions).map(questionId => {\r\n                var question = questions[questionId];\r\n                if(question.imageUrl===\"\"){\r\n                    // If the question does not have an image.\r\n                    return(\r\n                            <div id=\"question\" key={questionId} className=\"row h-100 py-3 px-3 px-md-5 mt-2 mb-3\">\r\n                                <div className=\"col-12 d-flex flex-column border-bottom\">\r\n                                    <h3 className=\"font-weight-bold pb-2\">{`${question.id} : ${question.text}`}</h3>\r\n                                    <div className=\"options mr-1 flex-fill row justify-content-around ml-2 pr-3\">\r\n                                        { // load and show each option content *\r\n                                            Object.keys(question.options).map(optionId => {\r\n                                                return(\r\n                                                    <label key={`${questionId}${optionId}`} className=\"option col-12 col-md-6 my-2\" htmlFor={`option-${optionId}`}>\r\n                                                        <span className=\"\">\r\n                                                            {optionId})&nbsp; \r\n                                                            {question.options[optionId].text}\r\n                                                            {question.options[optionId].optionImageUrl === \"\" \r\n                                                                ? \r\n                                                                    null \r\n                                                                        : \r\n                                                                    <img className=\"img-thumbnail\" src={question.options[optionId].optionImageUrl} alt=\"answer-option\"/>\r\n                                                            }\r\n                                                        </span>\r\n                                                            {(optionId === userAnswers[questionId-1].userAnswer ? \r\n                                                                (Number(optionId) === question.rightAnswer ? \r\n                                                                    <span className=\"badge badge-success badge-pill mr-2\"><i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i> پاسخ شما ({Number(optionId)})</span>\r\n                                                                    : \r\n                                                                    <span className=\"badge badge-danger badge-pill mr-2\"><i className=\"fa fa-times\" aria-hidden=\"true\"></i> پاسخ شما ({Number(optionId)})</span>)\r\n                                                                : (Number(optionId) === question.rightAnswer ? \r\n                                                                        <span className=\"badge badge-secondary badge-pill mr-2\"><i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i> گزینه درست ({Number(optionId)})</span>\r\n                                                                        :\r\n                                                                        null\r\n                                                                )\r\n                                                            )}\r\n                                                    </label> \r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                    ); \r\n                }\r\n                else {\r\n                    // If the question does has an image.\r\n                    return ( \r\n                        <div id=\"question\" key={questionId} className=\"row h-100 py-3 px-3 px-md-5 mt-2 mb-3\">\r\n                            <div className=\"col-md-8 d-flex flex-column\">\r\n                                <h3 className=\"font-weight-bold pb-2\">{`${question.id} : ${question.text}`}</h3>\r\n                                <div className=\"options mr-4 flex-fill d-flex flex-column justify-content-around ml-2 pr-3\">\r\n                                    {// loading and showing each answer option content\r\n                                        Object.keys(question.options).map(optionId => {\r\n                                                return(\r\n                                                    <label key={`${questionId}${optionId}`} className=\"option mb-1\" htmlFor={`option-${optionId}`}>\r\n                                                        <span>\r\n                                                            {optionId})&nbsp; \r\n                                                            {question.options[optionId].text}\r\n                                                            {question.options[optionId].optionImageUrl === \"\" \r\n                                                                ? \r\n                                                                null \r\n                                                                    : \r\n                                                                // Show image in reply option if available \r\n                                                                <img className=\"img-thumbnail\" src={question.options[optionId].optionImageUrl} alt=\"answer-option\"/>\r\n                                                            }\r\n                                                        </span>\r\n                                                        {(optionId === userAnswers[questionId-1].userAnswer ? \r\n                                                            (Number(optionId) === question.rightAnswer ? \r\n                                                                <span className=\"badge badge-success badge-pill mr-2\"><i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i> پاسخ شما ({(Number(optionId))})</span>\r\n                                                                : \r\n                                                                <span className=\"badge badge-danger badge-pill mr-2\"><i className=\"fa fa-times\" aria-hidden=\"true\"></i> پاسخ شما ({(Number(optionId))})</span>)\r\n                                                            : (Number(optionId) === question.rightAnswer ? \r\n                                                                    <span className=\"badge badge-secondary badge-pill mr-2\"><i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i> گزینه درست ({(Number(optionId))})</span>\r\n                                                                    :\r\n                                                                    null\r\n                                                            )\r\n                                                        )}\r\n                                                    </label> \r\n                                                )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4 text-center text-md-right question-image mt-4 mx-auto mx-md-0 text-center border-bottom\">\r\n                                {question.imageUrl === \"\" \r\n                                    ? \r\n                                    null \r\n                                    : \r\n                                    // Show the image in question\r\n                                    <img src={question.imageUrl} className=\"rounded border\" alt=\"option\"/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            })\r\n            }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport\r\ndefault AnswersAndOptions;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { calculateMistakes } from './../../utils/calculateMistakes';\r\nimport { Link } from 'react-router-dom';\r\nimport { clearAnswers } from './../../actions/userAnswers';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { newQuiz } from '../../actions/quizEnded';\r\n\r\nconst Result = () => {\r\n    const dispatch = useDispatch();\r\n    const questions = useSelector(state => state.questions);\r\n    const userAnswers = useSelector(state => state.userAnswers);\r\n    const currentUser = useSelector(state => state.currentUser);\r\n    \r\n    // calculate the count of all Mistakes(wrong + unanswered) and unanswered questions.\r\n    var [allMistakes, unAnswered] = calculateMistakes(questions, userAnswers);\r\n    // user passed the exm or not\r\n    var passed = allMistakes <= 4 ? true : false ;\r\n    // calculate results\r\n    var trueAnswers = userAnswers.length - allMistakes;\r\n    var trueAnswersPercentage = ((trueAnswers * 100) / userAnswers.length).toFixed(1) ;\r\n    // only user mistakes without unanswered percentage\r\n    var mistakesPercentage = (((allMistakes - unAnswered) * 100) / userAnswers.length).toFixed(1) ;\r\n    // only unanswered percentage\r\n    var unAnsweredPercentage = ((unAnswered * 100) / userAnswers.length).toFixed(1) ;\r\n    \r\n    useEffect(() => {\r\n        // go to top of the page\r\n        document.body.scrollTop = 50;\r\n        document.documentElement.scrollTop = 50;\r\n    },[])\r\n\r\n    return ( \r\n        <div className=\"quiz-section border rounded w-100\">\r\n            <div className=\"result\">\r\n                <div className=\"text-center\">\r\n                    {passed ? <img src=\"./images/success.svg\" alt=\"seccess\" style={{width: '10%'}}/> \r\n                                :\r\n                            <img src=\"./images/warning.svg\" alt=\"seccess\" style={{width: '10%'}}/>      \r\n                    }\r\n                </div>\r\n                <div className=\"text-center pb-4\">\r\n                    شما در این آزمون {\" \"}\r\n                    {passed ? \r\n                        <span className=\"success text-success\">قبول</span>\r\n                        : \r\n                        <span className=\"danger text-danger\">مردود</span> \r\n                    }\r\n                    {\" \"}\r\n                    شدید.\r\n                    <div className=\"small text-danger\">(بیش از چهار غلط داشتید)</div> \r\n                </div>\r\n                <div className=\"mx-auto\">\r\n                    <div className=\"result-bar progress mx-auto mb-2\" style={{height: \"2rem\", width: \"85%\"}}>\r\n                        <div className=\"progress-bar bg-success\" style={{width: `${trueAnswersPercentage}%`, cursor:\"default\"}}\r\n                             data-tip={`${trueAnswersPercentage}%  (درست)`}    \r\n                             data-place=\"bottom\" \r\n                             data-type=\"success\"  \r\n                             data-padding=\"200px 0\"\r\n                             data-html=\"true\"\r\n                        >\r\n                            <ReactTooltip />\r\n                            {trueAnswersPercentage}%  (درست)\r\n                        </div>\r\n                        <div className=\"progress-bar bg-danger\" style={{width: `${mistakesPercentage}%`, cursor:\"default\"}}\r\n                             data-tip={`${mistakesPercentage}%  (غلط)`}    \r\n                             data-place=\"bottom\" \r\n                             data-type=\"error\"  \r\n                             data-padding=\"200px 0\"\r\n                             data-html=\"true\"\r\n                        >\r\n                            <ReactTooltip />\r\n                            {mistakesPercentage}%  (غلط)\r\n                        </div>\r\n                        <div className=\"progress-bar no-answer\" style={{width: `${unAnsweredPercentage}%`, cursor:\"default\"}}\r\n                             data-tip={`${unAnsweredPercentage}% (بی پاسخ)`}  \r\n                             data-place=\"bottom\" \r\n                             data-type=\"dark\"  \r\n                             data-padding=\"200px 0\"\r\n                             data-html=\"true\"\r\n                        >\r\n                            {unAnsweredPercentage}%  (بی پاسخ)\r\n                            <ReactTooltip />\r\n                        </div>  \r\n                    </div>\r\n                    <div className=\"result-information w-100 mt-2 mx-auto row justify-content-center\">\r\n                        <div className=\"quiz-user col-12 col-md-7 row align-content-start\">\r\n                            <div className=\"col-sm-5 col-md-12 mb-2 m-md-0\"> نام: <span>{currentUser.firstname}</span></div>\r\n                            <div className=\"col-sm-7 col-md-12 mb-2 m-md-0\"> نام خانوادگی: <span>{currentUser.lastname}</span></div>\r\n                            <div className=\"col-sm-12 col-md-12\"> شماره ملی: <span>{currentUser.id}</span></div>\r\n                            <hr className=\"col-12 d-block d-md-none \" />\r\n                        </div>\r\n                        <div className=\"quiz-statistics text-right my-2 my-2 mr-4 mr-md-0 col-12 col-md-5\">\r\n                            <p className=\" \">\r\n                                تعداد کل سوالات: {userAnswers.length}\r\n                            </p>\r\n                            <p className=\" text-success trueAnswers\">\r\n                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                                {\" \"}\r\n                                    تعداد درست: {trueAnswers}\r\n                            </p>\r\n                            <p className=\" text-danger falseAnswers\">\r\n                                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                                {\" \"}\r\n                                    تعداد اشتباه: {allMistakes}\r\n                            </p> \r\n                            <p className=\" text-muted unAnswered\">\r\n                                    <i className=\"fa fa-circle-o\" aria-hidden=\"true\"></i>\r\n                                    {\" \"}\r\n                                    تعداد بدون پاسخ: {unAnswered}\r\n                            </p> \r\n                            \r\n                        </div>\r\n                        <div className=\"result-nav col-12 col-lg-9 text-center btn-group mb-1\">\r\n                            <Link to=\"/quiz-user-answers\" className=\"result-nav-link btn btn-info w-50 \">\r\n                            <i className=\"fa fa-list-alt\" aria-hidden=\"true\"></i>\r\n                            {\" \"}\r\n                                مشاهده برگه تصحیح شده\r\n                            </Link>\r\n                            <Link to=\"/quiz-questions\" className=\"result-nav-link btn btn-warning w-50\"\r\n                                     onClick={() => {\r\n                                         dispatch(clearAnswers());\r\n                                         dispatch(newQuiz());\r\n                                     }}            \r\n                            >\r\n                                <i className=\"fa fa-refresh fa-2\" aria-hidden=\"true\"></i> \r\n                                {\" \"} تکرار آزمون {\" \"}\r\n\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"result-nav col-12 col-lg-9 text-center\">\r\n                            <Link to=\"/\" className=\"result-nav-link btn btn-success w-100\">\r\n                                <i className=\"fa fa-plus-square-o\" aria-hidden=\"true\"></i>\r\n                                {\" \"}\r\n                                آزمون جدید\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>        \r\n     );\r\n}\r\n \r\nexport default Result;","export const calculateMistakes = (questions, userAnswers) => {\r\n    var allMistakes = 0 ;\r\n    var unAnswered = 0;\r\n    for (const id in questions) {\r\n        if(questions[id].rightAnswer !== Number(userAnswers[id-1].userAnswer) ){\r\n        // allMistakes variable contain number of wrong user answers and unanswered questions.\r\n            allMistakes = allMistakes + 1 ; \r\n        } \r\n        if(Number(userAnswers[id-1].userAnswer) === 0){\r\n        // allMistakes variable contain only number of unanswered questions.\r\n            unAnswered = unAnswered + 1 ;\r\n        }\r\n    }\r\n    return [allMistakes, unAnswered];\r\n}","import React, { useRef } from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { clearAnswers } from './../../actions/userAnswers';\r\nimport { clearUser, setUser } from \"./../../actions/user\"\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { newQuiz } from '../../actions/quizEnded';\r\nimport { clearQuestion } from '../../actions/question';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst QuizStart = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const [,forceUpdate] = useState();\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [nationalId, setNationalId] = useState('');\r\n    // set date of birth input values\r\n    const [birthDay, setBirthDay] = useState(null);\r\n    const [birthMonth, setBirthMonth] = useState(null);\r\n    const [birthYear, setBirthYear] = useState(null);\r\n    const [birthDate, setBirthDate] = useState([birthYear, birthMonth, birthDay]);\r\n    const [birthDateFilled, setBirthDateFilled] = useState('');\r\n    const [acceptRules, setAcceptRules] = useState();\r\n    useEffect(() => {\r\n        // go to top of the page\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n    },[])\r\n    // validator for validating form fields\r\n    const validator = useRef(new SimpleReactValidator({\r\n        messages: {\r\n            required: \"* وارد کردن اطلاعات این قسمت الزامی است.\",\r\n            min: \"* ۱۰ رقم کد ملی را کامل وارد کنید.\",\r\n            accepted: \"برای شرکت در آزمون می بایست قوانین را بپذیرید.\",\r\n            numeric: \"ورودی باید به عدد باشد.\"\r\n        },\r\n        element: message => <div className=\"text-danger position-relative mt-2\" style={{fontSize: \"16px\", right: \"9px\"}}>{message}</div>\r\n    })) \r\n    useEffect(() => {\r\n        birthDate.includes(null) ? setBirthDateFilled('') : setBirthDateFilled(true);\r\n    }, [birthDate])\r\n    useEffect(() => {\r\n        // Delete previous test information, if the user has already taken the test.\r\n        dispatch(clearAnswers());\r\n        dispatch(clearQuestion());\r\n        dispatch(clearUser());\r\n        dispatch(newQuiz());\r\n    },[])\r\n    const handleUserFormSubmit = () => {\r\n        if(validator.current.allValid()){\r\n            // current user information\r\n            const currentUser = {id: nationalId, \r\n                                 firstname: firstName,\r\n                                 lastname: lastName, \r\n                                 dateOfBirth: `${birthYear}/${birthMonth}/${birthDay}`\r\n                                };\r\n            // set current user\r\n            dispatch(setUser(currentUser));\r\n            alert(\r\n                \"توجه : \\n\"\r\n                + \"\\n \\t * این آزمون نمره منفی ندارد و پاسخ نادرست یا پاسخ ندادن هر سوال به منزله یک غلط است. \\n\"\r\n                + \"\\n \\t * در صورت داشتن بیش از چهار غلط مردود می شوید. \\n\"\r\n                ) \r\n                // Going to the URL that renders the questions\r\n                history.push(\"/quiz-questions\");\r\n        } \r\n        else {\r\n            validator.current.showMessages();\r\n            forceUpdate(1);\r\n        }\r\n    }\r\n    const handlePressEnterKey = event => {\r\n        if(event.code === \"Enter\" || event.keyCode === 13){\r\n            event.preventDefault()  \r\n            const submitButton = document.getElementById(\"submitButton\");\r\n            // Execute the form submission function performed by Button by pressing Enter\r\n            document.getElementById(\"user-form\").requestSubmit(submitButton);\r\n        }\r\n    }\r\n    return ( \r\n            <div className=\"quiz-section border rounded w-100\">\r\n                <Helmet>\r\n                    <title>آزمون راهنمایی و رانندگی</title>\r\n                </Helmet>\r\n                <h1 className=\"text-center mt-3 mb-5 start-h\"style={{color: \"#00558A\"}}>شروع آزمون!</h1>\r\n                <form className=\"form-group\" id=\"user-form\" \r\n                      onSubmit={e=>{\r\n                                    e.preventDefault();\r\n                                    handleUserFormSubmit()\r\n                                    }\r\n                                }\r\n                >\r\n                    <div className=\"row mx-auto\">\r\n                        <div className=\"col-md-4 mb-4\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"firstname\" placeholder=\"نام\" \r\n                                    name=\"firstname\"\r\n                                    onFocus={e => {\r\n                                        e.target.setAttribute('placeholder', '')\r\n                                    }}\r\n                                    onBlur={e => {\r\n                                        e.target.setAttribute('placeholder', \"نام\")\r\n                                    }}\r\n                                    onChange={e => {\r\n                                        setFirstName(e.target.value);\r\n                                    }}\r\n                            />\r\n                            {\r\n                                validator.current.message(\"firstname\", firstName, \"required\")\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-md-4 mb-4\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"lastname\" placeholder=\"نام خانوادگی\" \r\n                                    name=\"lastname\"\r\n                                    onFocus={e => {\r\n                                        e.target.setAttribute('placeholder', '')\r\n                                    }}\r\n                                    onBlur={e => {\r\n                                        e.target.setAttribute('placeholder', \"نام خانوادگی\")\r\n                                    }}\r\n                                    onChange={e => {\r\n                                        setLastName(e.target.value);\r\n                                    }}\r\n                            />\r\n                            {validator.current.message(\"lastname\", lastName, \"required\")}\r\n                        </div>\r\n                        <div className=\"col-md-4 mb-4\">\r\n                            <input type=\"text\" className=\"form-control persian-number\" id=\"NID\" placeholder=\"کد ملی\" \r\n                                    maxLength=\"10\" \r\n                                    name=\"NID\"\r\n                                    onFocus={e => {\r\n                                        e.target.setAttribute('placeholder', '')\r\n                                    }}\r\n                                    onBlur={e => {\r\n                                        e.target.setAttribute('placeholder', \"کد ملی\")\r\n                                    }}\r\n                                    onChange={e => {\r\n                                        if(isNaN(Number(e.target.value))){\r\n                                            // If the input is not a number, do not add anything to the displayed string\r\n                                            e.target.style.backgroundColor = \"rgba(231, 76, 60,0.3)\";\r\n                                            e.target.setAttribute(\"placeholder\", \"لطفا عدد وارد کنید!\")\r\n                                            e.target.value = nationalId + \"\" ;\r\n                                        } else {\r\n                                            // If the input value is a number\r\n                                            e.target.style.backgroundColor = \"white\";\r\n                                            e.target.setAttribute(\"placeholder\", \"\")\r\n                                            setNationalId(e.target.value);\r\n                                        }\r\n                                    }}\r\n                            />\r\n                            {// National code entry is required and national code is 10 digits\r\n                                validator.current.message(\"NID\", nationalId, \"required|min:10|numeric\")\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-12 text-center mb-3\" name=\"birthDate\"\r\n                             onKeyDown={e=>handlePressEnterKey(e)}\r\n                             >\r\n                            <label htmlFor=\"birth\" className=\"d-block d-md-inline\">\r\n                                تاریخ تولد: \r\n                            </label>\r\n                            <select className=\"birth-select d-block d-md-inline mx-1 rounded border bg-light\" name=\"day\" id=\"birth\" \r\n                                    onChange={e => {\r\n                                        setBirthDay(e.target.value)\r\n                                        setBirthDate([birthYear, birthMonth, e.target.value]);\r\n                                    }}\r\n                                    defaultValue = {0}\r\n                            >\r\n                                <option value={0} disabled hidden>روز</option>\r\n                                <option>۰۱</option><option>۰۲</option><option>۰۳</option><option>۰۴</option><option>۰۵</option><option>۰۶</option><option>۰۷</option><option>۰۸</option><option>۰۹</option><option>۱۰</option><option>۱۱</option><option>۱۲</option><option>۱۳</option><option>۱۴</option><option>۱۵</option><option>۱۶</option><option>۱۷</option><option>۱۸</option><option>۱۹</option><option>۲۰</option><option>۲۱</option><option>۲۲</option><option>۲۳</option><option>۲۴</option><option>۲۵</option><option>۲۶</option><option>۲۷</option><option>۲۸</option><option>۲۹</option><option>۳۰</option><option>۳۱</option>\r\n                            </select>\r\n                            <select className=\"birth-select d-block d-md-inline mx-1 rounded border bg-light\" name=\"month\" \r\n                                    onChange={e => {\r\n                                        setBirthMonth(e.target.value)\r\n                                        setBirthDate([birthYear, e.target.value, birthDay ]);\r\n                                    }}\r\n                                    defaultValue = {0}\r\n                            >\r\n                            <option value={0} disabled hidden>ماه</option>\r\n                                <option>۰۱</option><option>۰۲</option><option>۰۳</option><option>۰۴</option><option>۰۵</option><option>۰۶</option><option>۰۷</option><option>۰۸</option><option>۰۹</option><option>۱۰</option><option>۱۱</option><option>۱۲</option>\r\n                            </select>\r\n                            <select className=\"birth-select d-block d-md-inline mx-1 rounded border bg-light\" name=\"year\"\r\n                                    onChange={e => {\r\n                                        setBirthYear(e.target.value)\r\n                                        setBirthDate([e.target.value, birthMonth, birthDay]);\r\n                                    }}\r\n                                    defaultValue = {0}\r\n                            >\r\n                            <option value={0} disabled hidden>سال</option>\r\n                                <option>۱۳۸۲</option><option>۱۳۸۱</option><option>۱۳۸۰</option><option>۱۳۷۹</option><option>۱۳۷۸</option><option>۱۳۷۷</option><option>۱۳۷۶</option><option>۱۳۷۵</option><option>۱۳۷۴</option><option>۱۳۷۳</option><option>۱۳۷۲</option><option>۱۳۷۱</option><option>۱۳۷۰</option><option>۱۳۶۹</option><option>۱۳۶۸</option><option>۱۳۶۷</option><option>۱۳۶۶</option><option>۱۳۶۵</option><option>۱۳۶۴</option><option>۱۳۶۳</option><option>۱۳۶۲</option><option>۱۳۶۱</option><option>۱۳۶۰</option><option>۱۳۵۹</option><option>۱۳۵۸</option><option>۱۳۵۷</option><option>۱۳۵۶</option><option>۱۳۵۵</option><option>۱۳۵۴</option><option>۱۳۵۳</option><option>۱۳۵۲</option><option>۱۳۵۱</option><option>۱۳۵۰</option><option>۱۳۴۹</option><option>۱۳۴۸</option><option>۱۳۴۷</option><option>۱۳۴۶</option><option>۱۳۴۵</option><option>۱۳۴۴</option><option>۱۳۴۳</option><option>۱۳۴۲</option><option>۱۳۴۱</option><option>۱۳۴۰</option><option>۱۳۳۹</option><option>۱۳۳۸</option><option>۱۳۳۷</option><option>۱۳۳۶</option><option>۱۳۳۵</option><option>۱۳۳۴</option><option>۱۳۳۳</option><option>۱۳۳۲</option><option>۱۳۳۱</option><option>۱۳۳۰</option><option>۱۳۲۹</option><option>۱۳۲۸</option><option>۱۳۲۷</option><option>۱۳۲۶</option><option>۱۳۲۵</option><option>۱۳۲۴</option><option>۱۳۲۳</option><option>۱۳۲۲</option><option>۱۳۲۱</option><option>۱۳۲۰</option><option>۱۳۱۹</option><option>۱۳۱۸</option><option>۱۳۱۷</option><option>۱۳۱۶</option><option>۱۳۱۵</option><option>۱۳۱۴</option><option>۱۳۱۳</option><option>۱۳۱۲</option><option>۱۳۱۱</option><option>۱۳۱۰</option><option>۱۳۰۹</option><option>۱۳۰۸</option><option>۱۳۰۷</option><option>۱۳۰۶</option><option>۱۳۰۵</option><option>۱۳۰۴</option><option>۱۳۰۳</option><option>۱۳۰۲</option><option>۱۳۰۱</option><option>۱۳۰۰</option>\r\n                            </select>\r\n                            {\r\n                                validator.current.message(\"birthDate\", birthDateFilled, \"required: true\")\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-12 text-center mb-3\" name=\"accept-rules\" >\r\n                            <input type=\"checkbox\" id=\"accept-rules\" \r\n                                   value={acceptRules} \r\n                                   onChange={e => \r\n                                       setAcceptRules(e.currentTarget.checked)\r\n                                       }\r\n                            />\r\n                            {\" \"}\r\n                            <label className=\"accept-rules-label mb-0\" htmlFor=\"accept-rules\">\r\n                                <a href=\"#rules\">قوانین آزمون </a>\r\n                                را می پذیرم.\r\n                            </label>\r\n                        {validator.current.message(\"accept-rules\", acceptRules, \"accepted\")}\r\n\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <button type=\"submit\" id=\"submitButton\" className=\"start-button btn btn-success px-5 mx-auto\">شروع می کنم</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"w-100 p-5\">\r\n                    <h1 className=\"text-center exam-rules-header pt-4\" id=\"rules\">** قوانین آزمون **</h1>\r\n                    <div className=\"px-3 py-2 mt-3 text-justify\" style={{fontSize: \"24px\"}}>\r\n                        * این آزمون نمره منفی ندارد و پاسخ نادرست یا پاسخ ندادن هر سوال به منزله یک غلط است. \r\n                        <br className=\"mb-3\"/>\r\n                        * در صورت داشتن بیش از چهار غلط مردود می شوید.\r\n                        <br className=\"mb-3\" />\r\n                        * حد اکثر زمان پاسخ دهی در این آزمون 20 دقیقه می باشد.\r\n                        <br className=\"mb-3\" />*\r\n                        لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ، و با استفاده از طراحان گرافیک است، چاپگرها\r\n                        و متون بلکه روزنامه و مجله در ستون و سطرآنچنان که لازم است، و برای شرایط فعلی تکنولوژی مورد نیاز،\r\n                        و کاربردهای متنوع با هدف بهبود ابزارهای کاربردی می باشد، کتابهای زیادی در شصت و سه درصد گذ\r\n                        شته حال و آینده، شناخت فراوان جامعه و متخصصان را می طلبد، تا با نرم افزارها شناخت بیشتری \r\n                        را برای طراحان رایانه ای علی الخصوص طراحان خلاقی، و فرهنگ پیشرو در زبان فارسی ایجاد کرد،\r\n                        در این صورت می توان امید داشت که تمام و دشواری موجود در ارائه راهکارها،\r\n                        و شرایط سخت تایپ به پایان رسد و زمان مورد نیاز شامل حروفچینی دستاوردهای اصلی،\r\n                        و جوابگوی سوالات پیوسته اهل دنیای موجود طراحی اساسا مورد استفاده قرار گیرد.\r\n                        <br className=\"mb-3\" />*\r\n                        لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ، و با استفاده از طراحان گرافیک است، چاپگرها\r\n                        و متون بلکه روزنامه و مجله در ستون و سطرآنچنان که لازم است، و برای شرایط فعلی تکنولوژی مورد نیاز،\r\n                        و کاربردهای متنوع با هدف بهبود ابزارهای کاربردی می باشد، کتابهای زیادی در شصت و سه درصد گذ\r\n                        شته حال و آینده، شناخت فراوان جامعه و متخصصان را می طلبد، تا با نرم افزارها شناخت بیشتری \r\n                        را برای طراحان رایانه ای علی الخصوص طراحان خلاقی، و فرهنگ پیشرو در زبان فارسی ایجاد کرد،\r\n                        در این صورت می توان امید داشت که تمام و دشواری موجود در ارائه راهکارها،\r\n                        و شرایط سخت تایپ به پایان رسد و زمان مورد نیاز شامل حروفچینی دستاوردهای اصلی،\r\n                        و جوابگوی سوالات پیوسته اهل دنیای موجود طراحی اساسا مورد استفاده قرار گیرد.\r\n\r\n                    </div>\r\n                </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default QuizStart;\r\n","export const setUser = currentUser => {\r\n    return async dispatch => {\r\n        const user = currentUser;\r\n        await dispatch({type: \"SET_USER\", payload: user});\r\n    }\r\n}\r\nexport const clearUser = () => {\r\n    return async dispatch => {\r\n        await dispatch({type: \"CLEAR_USER\", payload: {} });\r\n    }\r\n}","import React, { Fragment, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageNotFound = () => {\r\n    useEffect(() => {\r\n        // go to top of the page\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n    },[])\r\n    return ( \r\n        <Fragment>\r\n            <Helmet>\r\n                <title>خطای ۴۰۴</title>\r\n            </Helmet>\r\n            <div className=\"border rounded w-100 p-5\" style={{backgroundColor: \"#F7FAFD\"}}>\r\n                <div className=\"text-center\">\r\n                    <img src=\"./images/404.png\" className=\"w-50\" alt=\"404\"/>\r\n                </div>\r\n                <div className=\"px-3 py-2 mt-3 display-4 text-justify text-center font-weight-bold\">\r\n                    صفحه مورد نظر یافت نشد ...\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default PageNotFound;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Switch, withRouter } from 'react-router';\r\nimport { Route } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport MainLayout from '../layouts/MainLayout';\r\nimport AboutUs from './../aboutUs/AboutUs';\r\nimport Contact from './../contact/contact';\r\nimport Questions from './../quiz/Questions';\r\nimport QuizEnd from './../quiz/QuizEnd';\r\nimport AnswersAndOptions from '../showingAnswers/AnswersAndOptions';\r\nimport Result from './../result/Result';\r\nimport QuizStart from './../quiz/QuizStart';\r\nimport { isEmpty } from 'lodash';\r\nimport PageNotFound from '../pageNoyFound/PageNotFound';\r\n\r\nconst TrafficQuiz = () => {\r\n    const questions = useSelector(state => state.questions); \r\n    const userAnswers = useSelector(state => state.userAnswers);\r\n    const currentUser = useSelector(state => state.currentUser);\r\n\r\n    return (\r\n        <MainLayout>\r\n            <Switch>\r\n                <Route path=\"/\" component={QuizStart} exact/>\r\n                    <Route path=\"/quiz-questions\" component={Questions} exact/>\r\n                    <Route path=\"/quiz-end\" component={QuizEnd} exact/>\r\n                    <Route path=\"/quiz-result\" \r\n                            render={userAnswers.length !== Object.keys(questions).length && isEmpty(currentUser) ? \r\n                                        () => {\r\n                                            // Go to the first page if no exam has started\r\n                                            return(<Redirect to=\"/\"/>)\r\n                                        } \r\n                                        :\r\n                                        (userAnswers.length !== Object.keys(questions).length ?\r\n                                            () => {\r\n                                                // If the user has not answered all the questions, redirect to the questions page.\r\n                                                return(<Redirect to=\"/quiz-questions\" />)\r\n                                            }\r\n                                            :\r\n                                            () => {\r\n                                            // If the user has answered all the questions, render the result page.\r\n                                            return(<Result />)\r\n                                            }\r\n                                            )\r\n                                        } exact/>\r\n                    <Route path=\"/quiz-user-answers\" component={AnswersAndOptions} exact/>\r\n                <Route path=\"/about-us\" component={AboutUs} exact/>\r\n                <Route path=\"/contact\" component={Contact} exact/>\r\n                <Route component={PageNotFound} exact/>\r\n            </Switch> \r\n        </MainLayout>\r\n     );\r\n    }\r\n    \r\n \r\nexport default withRouter(TrafficQuiz);","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport TrafficQuiz from './TrafficQuiz';\r\n \r\n\r\nconst App = () => {\r\n    return ( \r\n        <BrowserRouter>\r\n            <TrafficQuiz />\r\n        </BrowserRouter>\r\n     );\r\n}\r\n  \r\nexport default App ;","import { combineReducers } from \"redux\";\r\nimport { questionsReducer } from './questions';\r\nimport { questionReducer } from './qestion';\r\nimport { userReducer } from './user';\r\nimport { userAnswersReducer } from './userAnswers';\r\nimport { quizEndedReducer } from './quizEnded';\r\n\r\nexport const reducers = combineReducers({\r\n    questions: questionsReducer,\r\n    question: questionReducer,\r\n    currentUser: userReducer,\r\n    userAnswers: userAnswersReducer,\r\n    quizEnded: quizEndedReducer\r\n})","export const questionsReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case \"INIT\": \r\n            return {...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","export const questionReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case \"GET_QUESTION\":\r\n            return {...action.payload};\r\n        case \"CLEAR_QUESTION\":\r\n            return {...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","export const userReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case 'SET_USER':\r\n            return {...action.payload};\r\n        case 'CLEAR_USER':\r\n            return {...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","export const userAnswersReducer = (state=[], action) => {\r\n    switch(action.type){\r\n        case \"ADD_ANSWER\":\r\n            return [...action.payload];\r\n        case \"UPDATE_ANSWER\":\r\n            return [...action.payload];\r\n        case \"CLEAR_ANSWERS\":\r\n            return [...action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n}","export const quizEndedReducer = (state = false, action) => {\r\n    switch(action.type){\r\n        case \"FINISH_QUIZ\":\r\n            return action.payload;\r\n        case \"NEW_QUIZ\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { compose, applyMiddleware } from \"redux\";\r\nimport { reducers } from './../reducers/index ';\r\nimport { getAllQuestions } from \"../actions/questions\";\r\nimport questions from \"./../questionsJson/questions.json\"\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  compose(\r\n    applyMiddleware(thunk)\r\n      // ,\r\n      // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n// initialize questions\r\nstore.dispatch(getAllQuestions(questions)) // *\r\n\r\n","import React from \"react\";\r\nimport { render } from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/containers/App\";\r\nimport { store } from './store/index';\r\nimport './style.scss'\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}